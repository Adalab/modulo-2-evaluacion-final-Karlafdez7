{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\nconst userSearch=document.querySelector(\".js-inputSearch\");\n\nconst btnSearchUser=document.querySelector(\".js-btnSearch\");\n\nconst btnResetUser=document.querySelector(\".js-btnReset\");\n\nconst listFavourites=document.querySelector(\".js-favourites\");\n\nconst listCocktails=document.querySelector(\".js-cocktails\")\n\n\n\n//Lista vacía para rellenar con los datos de la API\nlet listCocktailsData = [];\nlet listSearchUserData = [];\nlet listFavouritesCocktailsData = [];\n\n//Traer datos-cócteles: que se abra una lista de cócteles al cargar el proyecto\n//data.drinks es para obetener los datos que necesito de cada cocktail\nfetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=margarita')\n    .then((response) => response.json())\n    .then (data => {\n        listCocktailsData = data.drinks;\n        renderCocktailsList (listCocktailsData)\n        \n    });\n\n    //Se crea una función donde hacemos el FETCH con el link de la api para que la usuaria meta el valor de busqueda (userSearch.value)\n    //Para que no se sobrecriba a la lista de margaritas que tenemos al cargar la página: llamamos donde se pinta la lista de cócteles (ul) y la vacíamos.\n    //Hemos creado un nuevo array para que contenga la lista de busqueda de la usuaria \"listSearchUser\"\n    //Llamamos la estructura \"renderCocktailsList\" y le ponemos el parámetro de nuestro array. \n\n\nfunction handleClick(event) {\n    event.preventDefault();\n\n    const selectionCocktails = userSearch.value.toLowerCase();\n    console.log(selectionCocktails);\n    fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${selectionCocktails}`)\n    .then((response) => response.json())\n    .then ((data) => {\n        listSearchUserData= data.drinks;\n        listCocktails.innerHTML= '';   \n        renderCocktailsList (listSearchUserData)  \n    });\n  \n\n    \n}\n\n\n//Se hace una función para poder ir obteniendo los diferentes cocktails de la API mediante un for...of\n//El objetivo es poder pintar los cocktails\n//Se recoge la función renderCocktailsStructure para meter los datos de los cocktails dentro de la estructura\n//Esta función (renderCocktailsList) se llevará al Fetch para que se rellene una vez la API se haya traído a nuestro proyecto. Debemos tener en cuenta que el FETCH tarda más (aunque imperceptible) en cargar que el resto de ejecuciones, por eso lo debemos llamar en FETCH. \nfunction renderCocktailsList (listCocktailsData) {\n    for (const cocktails of listCocktailsData) {\n        if (cocktails.strDrinkThumb) { \n        listCocktails.innerHTML += renderCocktailsStructure(cocktails);\n        } else {\n            let html =  `<li class=\"js-elementLi\" id=${cocktails.idDrink}>${cocktails.strDrink}</li>\n            <img src=  https://via.placeholder.com/210x295/ffffff/666666/?text=TV />`;\n            return html;\n        }\n\n    }\n    \n    addEventToCocktails(); //<-- Llamo para que se ejecute la función click de seleccionar aquí: es el momento donde quiero que se ejecute (cuando se está pintando).\n    \n}\n\n//Crear estructura de LI que se pintará en el HTML \n//Usar referencia del objeto para cada dato que necesito. En este caso el nombre del cocktail (strDrink) y la imagen del cocktail (strDrinkThumb)\nfunction renderCocktailsStructure(cocktails) {\n  let html =  `<li class=\"js-elementLi\" id=${cocktails.idDrink}>${cocktails.strDrink}\n    <img src= ${cocktails.strDrinkThumb} /> </li>`;\n  return html;\n}\n\n//Creao la función que va a contener las acciones que desencadena \"click\" a un cocktail (la llamo en el eventList de abajo)\n//En esta función: poner o quitar selección / Llevar a la ul de favoritos el cóctel seleccionado --en proceso--\nfunction handleClickElementLi(ev){    \n    ev.currentTarget.classList.toggle('select');\n    const idSelected = ev.currentTarget.id \n    const slctCocktail= listFavouritesCocktailsData.ev.currentTarget.id (cocktails => cocktails.id ===idSelected);\n\n}\n\n//Creamos la función que va a sacar todos los LI (mediante bucle) para poder generar en cada uno de ellos el evento click\n//Una vez ha sido creado lo tengo que llamar \nfunction addEventToCocktails() {\n    const elementLi=document.querySelectorAll(\".js-elementLi\")\n    for (const li of elementLi) {\n        li.addEventListener('click', handleClickElementLi);\n\n    }\n}\n\n//Una vez he conseguido que la lista de la API se cargue con la los margaritas:\n//Creo mis eventos aquí abajo ⬇️ \n//Arriba iremos poniendo las funciones que se ejecutan cuando activamos el evento\n\n//Primer evento asociado a la busqueda que haga la usuaria de cocktails. \n\nbtnSearchUser.addEventListener('click',handleClick)"]}